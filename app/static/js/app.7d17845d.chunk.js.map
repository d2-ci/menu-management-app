{"version":3,"sources":["D2App/App.module.css","D2App/components/MenuManagement/DraggableApp.module.css","D2App/components/MenuManagement/MenuManagement.module.css","D2App/locales/index.js","D2App/components/MenuManagement/DraggableApp.js","D2App/components/MenuManagement/index.js","D2App/App.js"],"names":["module","exports","i18n","addResources","enTranslations","App","defaultAction","icon","displayName","className","classes","href","src","DraggableApp","app","onDrag","onDrop","isDragging","connectDrag","useDrag","item","name","type","collect","monitor","end","connectDrop","useDrop","accept","hover","ref","useRef","style","visibility","query","apps","resource","mutation","data","items","MenuManagement","initialAppsOrder","appsOrder","setAppsOrder","useState","show","showSuccessfulUpdateAlert","useAlert","t","success","showErrorUpdatingAlert","message","critical","mutate","useDataMutation","onComplete","onError","error","handleAppDrag","useCallback","target","newAppsOrder","appIndex","indexOf","targetIndex","newApps","splice","moveApp","handleAppDrop","DndProvider","backend","HTML5Backend","map","appName","MenuManagementWrapper","baseUrl","useConfig","loading","useDataQuery","useMemo","getPath","path","startsWith","parts","filter","part","replace","join","joinPath","modules","msg","title","appsByName","forEach","spacers","theme","container","description"],"mappings":"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","file":"static/js/app.7d17845d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zgzu\",\"title\":\"App_title__1NBlr\",\"description\":\"App_description__3qOuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-link\":\"DraggableApp_app-link__1sukN\",\"app-icon\":\"DraggableApp_app-icon__2JFke\",\"app-name\":\"DraggableApp_app-name__2jau-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apps\":\"MenuManagement_apps__23px2\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport enTranslations from './en/translations.json';\nconst namespace = 'default';\ni18n.addResources('en', namespace, enTranslations);\nexport default i18n;","import { PropTypes } from '@dhis2/prop-types';\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport classes from './DraggableApp.module.css';\n\nconst App = ({\n  defaultAction,\n  icon,\n  displayName\n}) => <div>\n        <a className={classes['app-link']} href={defaultAction}>\n            <img className={classes['app-icon']} src={icon} />\n            <div className={classes['app-name']}>{displayName}</div>\n        </a>\n    </div>;\n\nApp.propTypes = {\n  defaultAction: PropTypes.string.isRequired,\n  displayName: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired\n};\nconst DND_ITEM_TYPE = 'APP';\n\nconst DraggableApp = ({\n  app,\n  onDrag,\n  onDrop\n}) => {\n  const [{\n    isDragging\n  }, connectDrag] = useDrag({\n    item: {\n      name: app.name,\n      type: DND_ITEM_TYPE\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    }),\n    end: onDrop\n  });\n  const [, connectDrop] = useDrop({\n    accept: DND_ITEM_TYPE,\n\n    hover(item) {\n      if (item.name != app.name) {\n        onDrag(item.name, app.name);\n      }\n    }\n\n  });\n  const ref = useRef();\n  connectDrag(ref);\n  connectDrop(ref);\n  return <div ref={ref} style={{\n    visibility: isDragging ? 'hidden' : 'visible'\n  }}>\n            <App {...app} />\n        </div>;\n};\n\nDraggableApp.propTypes = {\n  app: PropTypes.any.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDrop: PropTypes.func.isRequired\n};\nexport default DraggableApp;","import { useDataQuery, useDataMutation, useConfig, useAlert } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox, CenteredContent, CircularLoader, Card } from '@dhis2/ui';\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport i18n from '../../locales';\nimport DraggableApp from './DraggableApp';\nimport classes from './MenuManagement.module.css';\nconst query = {\n  apps: {\n    resource: 'action::menu/getModules'\n  }\n};\nconst mutation = {\n  resource: 'menu',\n  type: 'create',\n  data: ({\n    items\n  }) => items\n};\n\nconst moveApp = (apps, app, target) => {\n  const appIndex = apps.indexOf(app);\n  const targetIndex = apps.indexOf(target);\n  const newApps = [...apps];\n  newApps.splice(appIndex, 1);\n  newApps.splice(targetIndex, 0, app);\n  return newApps;\n};\n\nconst MenuManagement = ({\n  apps,\n  initialAppsOrder\n}) => {\n  const [appsOrder, setAppsOrder] = useState(initialAppsOrder);\n  const {\n    show: showSuccessfulUpdateAlert\n  } = useAlert(i18n.t('Updated order of apps.'), {\n    success: true\n  });\n  const {\n    show: showErrorUpdatingAlert\n  } = useAlert(message => message, {\n    critical: true\n  });\n  const [mutate] = useDataMutation(mutation, {\n    onComplete() {\n      showSuccessfulUpdateAlert();\n    },\n\n    onError(error) {\n      showErrorUpdatingAlert(error.message);\n    }\n\n  });\n  const handleAppDrag = useCallback((app, target) => {\n    const newAppsOrder = moveApp(appsOrder, app, target);\n    setAppsOrder(newAppsOrder);\n  }, [appsOrder]);\n  const handleAppDrop = useCallback(() => {\n    mutate({\n      items: appsOrder\n    });\n  }, [appsOrder]);\n  return <Card>\n            <DndProvider backend={HTML5Backend}>\n                <div className={classes.apps}>\n                    {appsOrder.map(appName => <DraggableApp key={appName} onDrag={handleAppDrag} onDrop={handleAppDrop} app={apps[appName]} />)}\n                </div>\n            </DndProvider>\n        </Card>;\n};\n\nMenuManagement.propTypes = {\n  apps: PropTypes.object.isRequired,\n  initialAppsOrder: PropTypes.array.isRequired\n};\n\nconst joinPath = (...parts) => {\n  const realParts = parts.filter(part => !!part);\n  return realParts.map(part => part.replace(/^\\/+|\\/+$/g, '')).join('/');\n};\n\nconst MenuManagementWrapper = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n  const apps = useMemo(() => {\n    const getPath = path => path.startsWith('http:') || path.startsWith('https:') ? path : joinPath(baseUrl, 'api', path);\n\n    return data?.apps.modules.map(app => ({ ...app,\n      icon: getPath(app.icon),\n      defaultAction: getPath(app.defaultAction)\n    }));\n  }, [data]);\n\n  if (loading) {\n    return <CenteredContent>\n                <CircularLoader />\n            </CenteredContent>;\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading your apps');\n    return <NoticeBox error title={msg}>\n                {error.message}\n            </NoticeBox>;\n  }\n\n  const appsByName = {};\n  apps.forEach(app => appsByName[app.name] = app);\n  return <MenuManagement apps={appsByName} initialAppsOrder={apps.map(({\n    name\n  }) => name)} />;\n};\n\nexport default MenuManagementWrapper;","import { CssVariables } from '@dhis2/ui';\nimport React from 'react';\nimport classes from './App.module.css';\nimport MenuManagement from './components/MenuManagement';\nimport i18n from './locales';\n\nconst App = () => <>\n        <CssVariables spacers theme />\n        <div className={classes.container}>\n            <header>\n                <h1 className={classes.title}>{i18n.t('Your apps')}</h1>\n                <p className={classes.description}>\n                    {i18n.t('Drag and drop the menu items to re-order them.')}\n                </p>\n            </header>\n            <MenuManagement />\n        </div>\n    </>;\n\nexport default App;"],"sourceRoot":""}