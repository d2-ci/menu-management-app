{"version":3,"sources":["D2App/App.module.css","D2App/components/MenuManagement/DraggableApp.module.css","D2App/components/MenuManagement/MenuManagement.module.css","D2App/components/AlertProvider/index.js","D2App/locales/index.js","D2App/components/MenuManagement/DraggableApp.js","D2App/components/MenuManagement/index.js","D2App/App.js"],"names":["module","exports","AlertContext","createContext","AlertProvider","children","alert","setAlert","useState","Provider","value","showSuccessAlert","message","type","timestamp","Date","now","showCriticalAlert","i18n","addResources","enTranslations","App","defaultAction","icon","displayName","className","classes","href","src","DraggableApp","app","onDrag","onDrop","isDragging","connectDrag","useDrag","item","name","collect","monitor","end","connectDrop","useDrop","accept","hover","ref","useRef","style","visibility","query","apps","resource","mutation","data","items","MenuManagement","initialAppsOrder","appsOrder","setAppsOrder","useContext","mutate","useDataMutation","onComplete","t","onError","error","handleAppDrag","useCallback","target","newAppsOrder","appIndex","indexOf","targetIndex","newApps","splice","moveApp","handleAppDrop","DndProvider","backend","HTML5Backend","map","appName","MenuManagementWrapper","baseUrl","useConfig","loading","useDataQuery","useMemo","getPath","path","startsWith","joinPath","modules","msg","title","appsByName","forEach","spacers","theme","container","description"],"mappings":"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","file":"static/js/app.15a63208.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zgzu\",\"title\":\"App_title__1NBlr\",\"description\":\"App_description__3qOuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-link\":\"DraggableApp_app-link__1sukN\",\"app-icon\":\"DraggableApp_app-icon__2JFke\",\"app-name\":\"DraggableApp_app-name__2jau-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apps\":\"MenuManagement_apps__23px2\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport React, { useState, useContext, createContext } from 'react';\nconst AlertContext = createContext();\nexport const useAlerts = () => useContext(AlertContext);\n\nconst AlertProvider = ({\n  children\n}) => {\n  const [alert, setAlert] = useState(null);\n\n  const showSuccessAlert = message => {\n    setAlert({\n      message,\n      type: 'success',\n      timestamp: Date.now()\n    });\n  };\n\n  const showCriticalAlert = message => {\n    setAlert({\n      message,\n      type: 'critical',\n      timestamp: Date.now()\n    });\n  };\n\n  return <AlertContext.Provider value={{\n    showSuccessAlert,\n    showCriticalAlert\n  }}>\n            {children}\n\n            <AlertStack>\n                {alert ? [<AlertBar key={alert.timestamp} {...{\n        [alert.type]: true\n      }}>\n                              {alert.message}\n                          </AlertBar>] : null}\n            </AlertStack>\n        </AlertContext.Provider>;\n};\n\nAlertProvider.propTypes = {\n  children: PropTypes.any.isRequired\n};\nexport default AlertProvider;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport enTranslations from './en/translations.json';\nconst namespace = 'default';\ni18n.addResources('en', namespace, enTranslations);\nexport default i18n;","import { PropTypes } from '@dhis2/prop-types';\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport classes from './DraggableApp.module.css';\n\nconst App = ({\n  defaultAction,\n  icon,\n  displayName\n}) => <div>\n        <a className={classes['app-link']} href={defaultAction}>\n            <img className={classes['app-icon']} src={icon} />\n            <div className={classes['app-name']}>{displayName}</div>\n        </a>\n    </div>;\n\nApp.propTypes = {\n  defaultAction: PropTypes.string.isRequired,\n  displayName: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired\n};\nconst DND_ITEM_TYPE = 'APP';\n\nconst DraggableApp = ({\n  app,\n  onDrag,\n  onDrop\n}) => {\n  const [{\n    isDragging\n  }, connectDrag] = useDrag({\n    item: {\n      name: app.name,\n      type: DND_ITEM_TYPE\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    }),\n    end: onDrop\n  });\n  const [, connectDrop] = useDrop({\n    accept: DND_ITEM_TYPE,\n\n    hover(item) {\n      if (item.name != app.name) {\n        onDrag(item.name, app.name);\n      }\n    }\n\n  });\n  const ref = useRef();\n  connectDrag(ref);\n  connectDrop(ref);\n  return <div ref={ref} style={{\n    visibility: isDragging ? 'hidden' : 'visible'\n  }}>\n            <App {...app} />\n        </div>;\n};\n\nDraggableApp.propTypes = {\n  app: PropTypes.any.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onDrop: PropTypes.func.isRequired\n};\nexport default DraggableApp;","import { useDataQuery, useDataMutation, useConfig } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox, CenteredContent, CircularLoader, Card } from '@dhis2/ui';\nimport { join as joinPath } from 'path-browserify';\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport i18n from '../../locales';\nimport { useAlerts } from '../AlertProvider';\nimport DraggableApp from './DraggableApp';\nimport classes from './MenuManagement.module.css';\nconst query = {\n  apps: {\n    resource: 'action::menu/getModules'\n  }\n};\nconst mutation = {\n  resource: 'menu',\n  type: 'create',\n  data: ({\n    items\n  }) => items\n};\n\nconst moveApp = (apps, app, target) => {\n  const appIndex = apps.indexOf(app);\n  const targetIndex = apps.indexOf(target);\n  const newApps = [...apps];\n  newApps.splice(appIndex, 1);\n  newApps.splice(targetIndex, 0, app);\n  return newApps;\n};\n\nconst MenuManagement = ({\n  apps,\n  initialAppsOrder\n}) => {\n  const [appsOrder, setAppsOrder] = useState(initialAppsOrder);\n  const {\n    showSuccessAlert,\n    showCriticalAlert\n  } = useAlerts();\n  const [mutate] = useDataMutation(mutation, {\n    onComplete() {\n      showSuccessAlert(i18n.t('Updated order of apps.'));\n    },\n\n    onError(error) {\n      showCriticalAlert(error.message);\n    }\n\n  });\n  const handleAppDrag = useCallback((app, target) => {\n    const newAppsOrder = moveApp(appsOrder, app, target);\n    setAppsOrder(newAppsOrder);\n  }, [appsOrder]);\n  const handleAppDrop = useCallback(() => {\n    mutate({\n      items: appsOrder\n    });\n  }, [appsOrder]);\n  return <Card>\n            <DndProvider backend={HTML5Backend}>\n                <div className={classes.apps}>\n                    {appsOrder.map(appName => <DraggableApp key={appName} onDrag={handleAppDrag} onDrop={handleAppDrop} app={apps[appName]} />)}\n                </div>\n            </DndProvider>\n        </Card>;\n};\n\nMenuManagement.propTypes = {\n  apps: PropTypes.object.isRequired,\n  initialAppsOrder: PropTypes.array.isRequired\n};\n\nconst MenuManagementWrapper = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n  const apps = useMemo(() => {\n    const getPath = path => path.startsWith('http:') || path.startsWith('https:') ? path : joinPath(baseUrl, 'api', path);\n\n    return data?.apps.modules.map(app => ({ ...app,\n      icon: getPath(app.icon),\n      defaultAction: getPath(app.defaultAction)\n    }));\n  }, [data]);\n\n  if (loading) {\n    return <CenteredContent>\n                <CircularLoader />\n            </CenteredContent>;\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading your apps');\n    return <NoticeBox error title={msg}>\n                {error.message}\n            </NoticeBox>;\n  }\n\n  const appsByName = {};\n  apps.forEach(app => appsByName[app.name] = app);\n  return <MenuManagement apps={appsByName} initialAppsOrder={apps.map(({\n    name\n  }) => name)} />;\n};\n\nexport default MenuManagementWrapper;","import { CssVariables } from '@dhis2/ui';\nimport React from 'react';\nimport classes from './App.module.css';\nimport AlertProvider from './components/AlertProvider';\nimport MenuManagement from './components/MenuManagement';\nimport i18n from './locales';\n\nconst App = () => <AlertProvider>\n        <CssVariables spacers theme />\n        <div className={classes.container}>\n            <header>\n                <h1 className={classes.title}>{i18n.t('Your apps')}</h1>\n                <p className={classes.description}>\n                    {i18n.t('Drag and drop the menu items to re-order them.')}\n                </p>\n            </header>\n            <MenuManagement />\n        </div>\n    </AlertProvider>;\n\nexport default App;"],"sourceRoot":""}